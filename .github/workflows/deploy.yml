# name: React Firebase CICD

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Run a one-line script
#         run: echo Start Deploy!

#       - name: Install Node
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Install Dependencies
#         run: |
#           npm install

#       - name: Build
#         run: |
#           npm run build
#         env:
#           VITE_SUPABASE_URL: ${{secrets.SUPABASE_URL}}
#           VITE_SUPABASE_ANON_KEY: ${{secrets.SUPABASE_ANON_KEY}}

#       - name: Upload Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: build
#           path: ./dist

#   deploy:
#     runs-on: ubuntu-latest
#     env:
#       VITE_SUPABASE_URL: ${{secrets.SUPABASE_URL}}
#       VITE_SUPABASE_ANON_KEY: ${{secrets.SUPABASE_ANON_KEY}}
#       FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#       FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4

#       - name: setup Node
#         uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Install Dependencies
#         run: |
#           npm install

#       - name: Install Firebase Tools
#         run: |
#           npm install -g firebase-tools

# - name: Download Artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: build

#       - name: make FIREBASE_KEY
#         run: |
#           echo "${{ secrets.FIREBASE_KEY }}" | base64 -d > ./firebase-key.json
#           echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase-key.json" >> $GITHUB_ENV

#       - name: Deploy Firebase functions
#         env:
#           FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
#           FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
#         shell: bash
#         run: firebase deploy --only hosting

#       - name: Remove Credentials File
#         if: success() || failure()
#         run: |
#           rm firebase-key.json

name: Scheduled deploy

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install firebase-tools
        run: npm install --save-dev firebase-tools

      - name: Decode Firebase service account key
        run: |
          echo "${{ secrets.FIREBASE_KEY }}" | base64 -d > ./react-todo-app.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/react-todo-app" >> $GITHUB_ENV

      - name: change space
        run: ./node_modules/.bin/firebase use ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy to Firebase Hosting
        run: |
          ./node_modules/.bin/firebase deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_CLI_EXPERIMENTS: webframeworks

      - name: delete GOOGLE_APPLICATION_CREDENTIALS
        run: rm $GOOGLE_APPLICATION_CREDENTIALS
        if: ${{ always() }}
